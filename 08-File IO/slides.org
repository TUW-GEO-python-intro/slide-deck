#+OPTIONS: reveal_center:t reveal_control:t reveal_height:-1
#+OPTIONS: reveal_history:nil reveal_keyboard:t reveal_mathjax:nil
#+OPTIONS: reveal_overview:t reveal_progress:t
#+OPTIONS: reveal_rolling_links:nil reveal_slide_number:t
#+OPTIONS: reveal_title_slide:t reveal_width:-1
#+options: toc:nil ^:nil num:nil
#+REVEAL_MARGIN: -1
#+REVEAL_MIN_SCALE: -1
#+REVEAL_MAX_SCALE: -1
#+REVEAL_ROOT: ../reveal.js
#+REVEAL_TRANS: default
#+REVEAL_SPEED: default
#+REVEAL_THEME: black
#+REVEAL_EXTRA_CSS: ../code_formatting.css
#+REVEAL_EXTRA_JS: 
#+REVEAL_HLEVEL: 1
#+REVEAL_TITLE_SLIDE_TEMPLATE: <h1>%t</h1> <h2>%a</h2> <h2>%e</h2> <h2>%d</h2>
#+REVEAL_TITLE_SLIDE_BACKGROUND:
#+REVEAL_TITLE_SLIDE_BACKGROUND_SIZE:
#+REVEAL_TITLE_SLIDE_BACKGROUND_REPEAT:
#+REVEAL_TITLE_SLIDE_BACKGROUND_TRANSITION:
#+REVEAL_MATHJAX_URL: http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML
#+REVEAL_SLIDE_NUMBER: t
#+REVEAL_PREAMBLE:
#+REVEAL_HEAD_PREAMBLE:
#+REVEAL_POSTAMBLE:
#+REVEAL_MULTIPLEX_ID:
#+REVEAL_MULTIPLEX_SECRET:
#+REVEAL_MULTIPLEX_URL:
#+REVEAL_MULTIPLEX_SOCKETIO_URL:
#+REVEAL_PLUGINS:

#+AUTHOR: Sebastian Hahn
#+EMAIL: 
#+TITLE: File IO

* File formats
- ASCII
- Raw binary
- Numpy
- Matlab
- IDL
- Negative
- HDF5
- Pickle - Python object serialization
* ASCII or text file
A text file in which each byte represents one character according to the ASCII
code. Contrast with a binary file, in which there is no one-to-one mapping
between bytes and characters. Files that have been formatted with a word
processor must be stored and transmitted as binary files to preserve the
formatting.
** Python standard library
[[https://docs.python.org/2/tutorial/inputoutput.html][Input output routines]]
- =open()=, =close()=
- =read()=, =readline()=, =readlines()=
- =write()=, =writelines()=
* CSV
A comma-separated values (CSV) file stores *tabular data* (numbers and text) in
plain-text form. Plain text means that the file is a sequence of characters,
with no data that has to be interpreted as binary numbers. A CSV file consists
of any number of records, separated by line breaks of some kind; each record
consists of fields, separated by some other character or string, most commonly a
literal comma or tab. Usually, all records have an identical sequence of fields.
** Python standard library
[[https://docs.python.org/2/tutorial/inputoutput.html][Input output routines]]
- =open()=, =close()=
- =read()=, =readline()=, =readlines()=
- =write()=, =writelines()=
** numpy
- [[http://docs.scipy.org/doc/numpy/reference/generated/numpy.fromfile.html][np.fromfile]]: Construct an array from data in a text or binary file
* Raw binary
** Python standard library
[[https://docs.python.org/2/tutorial/inputoutput.html][Input output routines]]
- =open()=, =close()=
- =read()=, =readline()=, =readlines()=
- =write()=, =writelines()=
** numpy
- [[http://docs.scipy.org/doc/numpy/reference/generated/numpy.fromfile.html][np.fromfile]]: Construct an array from data in a text or binary file
- [[http://docs.scipy.org/doc/numpy/reference/generated/numpy.ndarray.tofile.html#numpy.ndarray.tofile][ndarray.tofile]]: Write array to a file as text or binary (default)
* Numpy
** numpy
* Matlab
** scipy.io
* IDL
** scipy.io
* NetCDF
** netCDF4
* HDF5
** h5py
* Pickle
* Code                                                             :noexport:
To use numpy you need to import the module
#+begin_src python :results output :exports both :tangle lecture8.py :session *python*
import numpy as np 
print("Numpy version {:}".format(np.__version__))
#+end_src
